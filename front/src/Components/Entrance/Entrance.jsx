import React, { useState } from "react";
import { Link } from "react-router-dom";
import Form from "react-bootstrap/Form";
import "./Entrance.css";
// import Button from "react-bootstrap/Button";

const RegisterForm = () => {
  const [showPassword, setShowPassword] = useState(false);
  const [error, setError] = useState(null);

  const [formData, setFormData] = useState({
    name: "",
    email: "",
    password: "",
  });

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await fetch("http://localhost:8000/api/register", {
        method: "POST",
        headers: {
          Accept: "application/json",
          "Content-Type": "application/json",
        },
        body: JSON.stringify(formData),
      });

      const data = await response.json();

      if (response.ok) {
        localStorage.setItem("token", data.token); // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –≤ localStorage
        console.log(data.message); // –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      } else {
        setError(data.message); // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      }
    } catch (error) {
      console.error(error);
      setError("An error occurred. Please try again.");
    }
  };

  const PasswordVisibility = () => {
    setShowPassword(!showPassword);
  };

  return (
    <div className="container col-xl-10 col-xxl-8 px-4 py-5">
      <div className="row align-items-center g-lg-5 py-5">
        <div className="col-lg-7 text-center text-lg-start">
          <h1 className="display-4 fw-bold lh-1 text-body-emphasis mb-3">
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω ¬´–ß–∞–π–Ω—ã–π —Å–∞–¥¬ª!
          </h1>
          <p className="col-lg-10 fs-4">
            –ó–¥–µ—Å—å –∫–∞–∂–¥–∞—è —á–∞—à–∫–∞ –Ω–∞–ø–∏—Ç–∫–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ–º –≤ –º–∏—Ä
            –∞—Ä–æ–º–∞—Ç–æ–≤ –∏ –≤–∫—É—Å–æ–≤.
          </p>
        </div>
        <div className="col-md-10 mx-auto col-lg-5">
          <Form onSubmit={handleSubmit} className="registration">
            <h3>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h3>
            <Form.Control
              className=""
              type="text"
              name="name"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è"
              onChange={(e) =>
                setFormData({ ...formData, name: e.target.value })
              }
              autoComplete="name"
            />
            <Form.Control
              type="email"
              name="email"
              placeholder="–í–≤–µ–¥–∏—Ç–µ email"
              onChange={(e) =>
                setFormData({ ...formData, email: e.target.value })
              }
              autoComplete="email"
            />
            <div className="password-input w-100">
              <Form.Control
                type={showPassword ? "text" : "password"}
                value={formData.password}
                onChange={(e) =>
                  setFormData({ ...formData, password: e.target.value })
                }
                placeholder="–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å"
              />
              <span onClick={PasswordVisibility}>
                {showPassword ? "üôà" : "üëÅÔ∏è"}
              </span>
            </div>
            <div>
              <button type="submit" className="but">
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
              </button>
              <Link to="/authorization" className="hyg">
                –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
              </Link>
            </div>
          </Form>
        </div>
      </div>
    </div>
  );
};

export default RegisterForm;
